// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calcproto/calculator.proto

package calcproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Sum struct {
	FirstNum             int32    `protobuf:"varint,1,opt,name=first_num,json=firstNum,proto3" json:"first_num,omitempty"`
	SecondNum            int32    `protobuf:"varint,2,opt,name=second_num,json=secondNum,proto3" json:"second_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sum) Reset()         { *m = Sum{} }
func (m *Sum) String() string { return proto.CompactTextString(m) }
func (*Sum) ProtoMessage()    {}
func (*Sum) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_db298a37f490a8c9, []int{0}
}
func (m *Sum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sum.Unmarshal(m, b)
}
func (m *Sum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sum.Marshal(b, m, deterministic)
}
func (dst *Sum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sum.Merge(dst, src)
}
func (m *Sum) XXX_Size() int {
	return xxx_messageInfo_Sum.Size(m)
}
func (m *Sum) XXX_DiscardUnknown() {
	xxx_messageInfo_Sum.DiscardUnknown(m)
}

var xxx_messageInfo_Sum proto.InternalMessageInfo

func (m *Sum) GetFirstNum() int32 {
	if m != nil {
		return m.FirstNum
	}
	return 0
}

func (m *Sum) GetSecondNum() int32 {
	if m != nil {
		return m.SecondNum
	}
	return 0
}

type SumRequest struct {
	Sum                  *Sum     `protobuf:"bytes,1,opt,name=sum,proto3" json:"sum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_db298a37f490a8c9, []int{1}
}
func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (dst *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(dst, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetSum() *Sum {
	if m != nil {
		return m.Sum
	}
	return nil
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_db298a37f490a8c9, []int{2}
}
func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (dst *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(dst, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeDecomposition struct {
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeDecomposition) Reset()         { *m = PrimeDecomposition{} }
func (m *PrimeDecomposition) String() string { return proto.CompactTextString(m) }
func (*PrimeDecomposition) ProtoMessage()    {}
func (*PrimeDecomposition) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_db298a37f490a8c9, []int{3}
}
func (m *PrimeDecomposition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeDecomposition.Unmarshal(m, b)
}
func (m *PrimeDecomposition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeDecomposition.Marshal(b, m, deterministic)
}
func (dst *PrimeDecomposition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeDecomposition.Merge(dst, src)
}
func (m *PrimeDecomposition) XXX_Size() int {
	return xxx_messageInfo_PrimeDecomposition.Size(m)
}
func (m *PrimeDecomposition) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeDecomposition.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeDecomposition proto.InternalMessageInfo

func (m *PrimeDecomposition) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

type PrimeDecompositionResponse struct {
	Num                  int32    `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeDecompositionResponse) Reset()         { *m = PrimeDecompositionResponse{} }
func (m *PrimeDecompositionResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeDecompositionResponse) ProtoMessage()    {}
func (*PrimeDecompositionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_calculator_db298a37f490a8c9, []int{4}
}
func (m *PrimeDecompositionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeDecompositionResponse.Unmarshal(m, b)
}
func (m *PrimeDecompositionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeDecompositionResponse.Marshal(b, m, deterministic)
}
func (dst *PrimeDecompositionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeDecompositionResponse.Merge(dst, src)
}
func (m *PrimeDecompositionResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeDecompositionResponse.Size(m)
}
func (m *PrimeDecompositionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeDecompositionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeDecompositionResponse proto.InternalMessageInfo

func (m *PrimeDecompositionResponse) GetNum() int32 {
	if m != nil {
		return m.Num
	}
	return 0
}

func init() {
	proto.RegisterType((*Sum)(nil), "greet.Sum")
	proto.RegisterType((*SumRequest)(nil), "greet.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "greet.SumResponse")
	proto.RegisterType((*PrimeDecomposition)(nil), "greet.PrimeDecomposition")
	proto.RegisterType((*PrimeDecompositionResponse)(nil), "greet.PrimeDecompositionResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SumServiceClient is the client API for SumService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SumServiceClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
}

type sumServiceClient struct {
	cc *grpc.ClientConn
}

func NewSumServiceClient(cc *grpc.ClientConn) SumServiceClient {
	return &sumServiceClient{cc}
}

func (c *sumServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/greet.SumService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SumServiceServer is the server API for SumService service.
type SumServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
}

func RegisterSumServiceServer(s *grpc.Server, srv SumServiceServer) {
	s.RegisterService(&_SumService_serviceDesc, srv)
}

func _SumService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SumServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/greet.SumService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SumServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SumService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "greet.SumService",
	HandlerType: (*SumServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _SumService_Sum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "calculator/calcproto/calculator.proto",
}

// PrimeServiceClient is the client API for PrimeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrimeServiceClient interface {
	PrimeDecompStream(ctx context.Context, in *PrimeDecomposition, opts ...grpc.CallOption) (PrimeService_PrimeDecompStreamClient, error)
}

type primeServiceClient struct {
	cc *grpc.ClientConn
}

func NewPrimeServiceClient(cc *grpc.ClientConn) PrimeServiceClient {
	return &primeServiceClient{cc}
}

func (c *primeServiceClient) PrimeDecompStream(ctx context.Context, in *PrimeDecomposition, opts ...grpc.CallOption) (PrimeService_PrimeDecompStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PrimeService_serviceDesc.Streams[0], "/greet.PrimeService/PrimeDecompStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &primeServicePrimeDecompStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PrimeService_PrimeDecompStreamClient interface {
	Recv() (*PrimeDecompositionResponse, error)
	grpc.ClientStream
}

type primeServicePrimeDecompStreamClient struct {
	grpc.ClientStream
}

func (x *primeServicePrimeDecompStreamClient) Recv() (*PrimeDecompositionResponse, error) {
	m := new(PrimeDecompositionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PrimeServiceServer is the server API for PrimeService service.
type PrimeServiceServer interface {
	PrimeDecompStream(*PrimeDecomposition, PrimeService_PrimeDecompStreamServer) error
}

func RegisterPrimeServiceServer(s *grpc.Server, srv PrimeServiceServer) {
	s.RegisterService(&_PrimeService_serviceDesc, srv)
}

func _PrimeService_PrimeDecompStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeDecomposition)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PrimeServiceServer).PrimeDecompStream(m, &primeServicePrimeDecompStreamServer{stream})
}

type PrimeService_PrimeDecompStreamServer interface {
	Send(*PrimeDecompositionResponse) error
	grpc.ServerStream
}

type primeServicePrimeDecompStreamServer struct {
	grpc.ServerStream
}

func (x *primeServicePrimeDecompStreamServer) Send(m *PrimeDecompositionResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _PrimeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "greet.PrimeService",
	HandlerType: (*PrimeServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeDecompStream",
			Handler:       _PrimeService_PrimeDecompStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "calculator/calcproto/calculator.proto",
}

func init() {
	proto.RegisterFile("calculator/calcproto/calculator.proto", fileDescriptor_calculator_db298a37f490a8c9)
}

var fileDescriptor_calculator_db298a37f490a8c9 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x3f, 0x4b, 0xc4, 0x40,
	0x10, 0xc5, 0x8d, 0xe1, 0x0e, 0x33, 0xb1, 0xf0, 0xa6, 0x10, 0x8d, 0x0a, 0xba, 0x70, 0x22, 0x16,
	0x7b, 0x12, 0x5b, 0x1b, 0xc5, 0xfa, 0x90, 0x0b, 0x36, 0x36, 0x12, 0xd7, 0x51, 0x16, 0xb2, 0xd9,
	0xb8, 0x7f, 0xfc, 0xfc, 0x92, 0x4d, 0xbc, 0x04, 0xc2, 0x55, 0x99, 0xfc, 0xde, 0xcc, 0xbc, 0x37,
	0x2c, 0x2c, 0x45, 0x59, 0x09, 0x5f, 0x95, 0x4e, 0x9b, 0x55, 0x5b, 0x36, 0x46, 0x3b, 0xbd, 0x1a,
	0x20, 0x0f, 0x00, 0x67, 0xdf, 0x86, 0xc8, 0xb1, 0x47, 0x88, 0x0b, 0xaf, 0xf0, 0x0c, 0x92, 0x2f,
	0x69, 0xac, 0x7b, 0xaf, 0xbd, 0x3a, 0x89, 0x2e, 0xa3, 0x9b, 0xd9, 0xe6, 0x20, 0x80, 0xb5, 0x57,
	0x78, 0x01, 0x60, 0x49, 0xe8, 0xfa, 0x33, 0xa8, 0xfb, 0x41, 0x4d, 0x3a, 0xb2, 0xf6, 0x8a, 0xdd,
	0x02, 0x14, 0x5e, 0x6d, 0xe8, 0xc7, 0x93, 0x75, 0x78, 0x0e, 0xb1, 0xed, 0x77, 0xa4, 0x39, 0xf0,
	0xe0, 0xc2, 0x5b, 0xbd, 0xc5, 0x6c, 0x09, 0x69, 0xe8, 0xb5, 0x8d, 0xae, 0x2d, 0xe1, 0x31, 0xcc,
	0x0d, 0x59, 0x5f, 0xb9, 0xde, 0xb3, 0xff, 0x63, 0xd7, 0x80, 0x2f, 0x46, 0x2a, 0x7a, 0x26, 0xa1,
	0x55, 0xa3, 0xad, 0x74, 0x52, 0xd7, 0x78, 0x04, 0xf1, 0x10, 0xaf, 0x2d, 0x19, 0x87, 0x6c, 0xda,
	0xb7, 0xdd, 0x3e, 0xe9, 0xcf, 0x1f, 0x42, 0xd4, 0x82, 0xcc, 0xaf, 0x14, 0x84, 0xbc, 0xbb, 0x7d,
	0x31, 0x0a, 0xd9, 0x1d, 0x91, 0xe1, 0x18, 0x75, 0xdb, 0xd8, 0x5e, 0x4e, 0x70, 0x18, 0xdc, 0xfe,
	0xe7, 0x5f, 0x61, 0x31, 0x72, 0x2f, 0x9c, 0xa1, 0x52, 0xe1, 0x69, 0x3f, 0x3a, 0xcd, 0x95, 0x5d,
	0xed, 0x94, 0x06, 0x93, 0xbb, 0xe8, 0x29, 0x7d, 0x4b, 0xb6, 0xef, 0xf6, 0x31, 0x0f, 0x9f, 0xfb,
	0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x12, 0x03, 0xce, 0x43, 0xd6, 0x01, 0x00, 0x00,
}
